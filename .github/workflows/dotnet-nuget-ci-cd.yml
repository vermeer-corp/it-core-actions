name: NuGet Package CI/CD

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: false
        type: string
        default: 6.0.x
      publish-package:
        required: false
        type: boolean
        default: false
      working-directory:
        required: false
        type: string
        default: "./"
    secrets:
      github-token:
        required: true

jobs:
  build:
    name: Build/Test/Publish
    runs-on: [self-hosted, windows, x64, pella, msbuild]
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: Configure Vermeer Package Source
        run: |
          if (!(dotnet nuget list source | ? { $_ -like "*https://nuget.vermeer.com/nuget*"})) {
            dotnet nuget add source --name "Vermeer" "https://nuget.vermeer.com/nuget"
          }
      - name: Configure GitHub Package Source
        run: |
          if (dotnet nuget list source | ? { $_ -like "*https://nuget.pkg.github.com/vermeer-corp/*"}) {
            dotnet nuget remove source "Vermeer GitHub"
          }
          dotnet nuget add source --username vermeer-corp --password ${{ secrets.github-token }} --store-password-in-clear-text --name "Vermeer GitHub" "https://nuget.pkg.github.com/vermeer-corp/index.json"
      - name: Remove ACS NuGet Sources
        run: |
          if (dotnet nuget list source | ? { $_ -like "*https://pkgs.dev.azure.com/vermeeracs/*"}) {
            dotnet nuget remove source "OnMachine-Settings"
          }
          if (dotnet nuget list source | ? { $_ -like "*https://dcinuget01.azurewebsites.net/nuget*"}) {
            dotnet nuget remove source "DCI"
          }
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal
      - name: Package NuGet
        run: dotnet pack -c Release -o "${{ github.workspace }}\out" --no-build
        if: ${{ inputs.publish-package && success() }}
      - name: Publish NuGet to GitHub Packages
        run: dotnet nuget push "${{ github.workspace }}\out\*.nupkg"  --api-key ${{ secrets.github-token }} --source "Vermeer GitHub"
        if: ${{ inputs.publish-package && success() }}
