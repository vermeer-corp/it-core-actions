name: .NET Framework NuGet Package CI/CD

on:
  workflow_call:
    inputs:
      build-project:
        required: true
        type: string
      nuget-project:
        required: true
        type: string
      build-configuration:
        required: false
        type: string
        default: "Release"
      msbuild-args:
        required: false
        type: string
        default: ""
      test-file-glob:
        required: false
        type: string
      publish-package:
        required: false
        type: boolean
        default: false
    secrets:
      github-token:
        required: true

jobs:
  build:
    name: Build/Test/Publish
    runs-on: [self-hosted, windows, x64, pella, msbuild]

    steps:
      - uses: actions/checkout@v5
      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v2
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Configure GitHub Package Source
        run: |
          if (nuget sources list | ? { $_ -like "*https://nuget.pkg.github.com/vermeer-corp/*"}) {
            nuget sources remove -Name "Vermeer GitHub"
          }
          nuget sources add -Username vermeer-corp -Password ${{ secrets.github-token }} -StorePasswordInClearText -Name "Vermeer GitHub" -Source "https://nuget.pkg.github.com/vermeer-corp/index.json"
      - name: Remove ACS NuGet Sources
        run: |
          if (nuget sources list | ? { $_ -like "*https://pkgs.dev.azure.com/vermeeracs/*"}) {
            nuget sources remove -Name "OnMachine-Settings"
          }
          if (nuget sources list | ? { $_ -like "*https://dcinuget01.azurewebsites.net/nuget*"}) {
            nuget sources remove -Name "DCI"
          }
      - name: Restore dependencies
        run: nuget restore
      - name: Build
        run: msbuild ${{ inputs.build-project }} /p:Configuration=${{ inputs.build-configuration }} ${{ inputs.msbuild-args }}
      # - name: Test
      #   run: vstest.console.exe ${{ inputs.test-file-glob }}
      #   if: ${{ inputs.test-file-glob && inputs.test-file-glob != '' && success() }}
      - name: Package NuGet
        run: nuget pack ${{ inputs.nuget-project }} -IncludeReferencedProjects -Prop Configuration=${{ inputs.build-configuration }} -OutputDirectory "${{ github.workspace }}\out"
        if: ${{ inputs.publish-package && success() }}
      - name: Publish NuGet to GitHub Packages
        run: nuget push "${{ github.workspace }}\out\*.nupkg"  -ApiKey ${{ secrets.github-token }} -Source "Vermeer GitHub"
        if: ${{ inputs.publish-package && success() }}
